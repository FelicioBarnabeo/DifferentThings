#include "adddialog.h"
#include <QLabel>
#include <QComboBox>
#include <QSpinBox>
#include <QPushButton>
#include <QGridLayout>
#include <QtSerialPort/QSerialPortInfo>
#include "serialdevice.h"
#include <QErrorMessage>
#include <QDebug>

static SerialDevice * serialPort = new SerialDevice();

AddDialog::AddDialog(QWidget *parent)
    : QDialog(parent)
    , m_serialPortLabel   (new QLabel(tr("Serial port")))
    , m_serialPortComboBox(new QComboBox())
    , m_dataBitsLabel     (new QLabel(tr("Data bits")))
    , m_dataBitsComboBox  (new QComboBox())
    , m_stopBitsLabel     (new QLabel(tr("Stop bits")))
    , m_stopBitsComboBox  (new QComboBox())
    , m_baudRateLabel     (new QLabel(tr("Baud rate")))
    , m_baudRateComboBox  (new QComboBox())
    , m_parityBitLabel    (new QLabel(tr("Parity")))
    , m_parityComboBox    (new QComboBox())
    , m_okButton          (new QPushButton(tr("OK")))
    , m_cancelButton      (new QPushButton(tr("Cancel")))
    , m_portNotify        (new QErrorMessage)
{
    const auto infos = QSerialPortInfo::availablePorts();
    for(const QSerialPortInfo &info : infos)
        m_serialPortComboBox->addItem(info.portName());

    const auto info_speed = QSerialPortInfo::standardBaudRates();
    for(const int &info : info_speed)
        m_baudRateComboBox->addItem(QString::number(info));
    m_baudRateComboBox->setCurrentText("115200");

    m_parityComboBox->addItems(m_serial->listParity());
    m_parityComboBox->setCurrentText("NoParity");

    m_dataBitsComboBox->addItems(m_serial->listDataBits());
    m_dataBitsComboBox->setCurrentText("Data8");

    m_stopBitsComboBox->addItems(m_serial->listStopBits());
    m_stopBitsComboBox->setCurrentText("OneStop");

    QVBoxLayout *mainLayout = new QVBoxLayout;
    QGridLayout *dialogLayout = new QGridLayout;
    dialogLayout->addWidget(m_serialPortLabel,    0, 0);
    dialogLayout->addWidget(m_serialPortComboBox, 0, 1);
    dialogLayout->addWidget(m_parityBitLabel,     0, 2);
    dialogLayout->addWidget(m_parityComboBox,     0, 3);
    dialogLayout->addWidget(m_baudRateLabel,      1, 0);
    dialogLayout->addWidget(m_baudRateComboBox,   1, 1);
    dialogLayout->addWidget(m_stopBitsLabel,      1, 2);
    dialogLayout->addWidget(m_stopBitsComboBox,   1, 3);
    dialogLayout->addWidget(m_dataBitsLabel,      2, 0);
    dialogLayout->addWidget(m_dataBitsComboBox,   2, 1);

    QBoxLayout *buttonsLayout = new QBoxLayout(QBoxLayout::LeftToRight);
    buttonsLayout->addWidget(m_okButton);
    buttonsLayout->addWidget(m_cancelButton);

    mainLayout->addLayout(dialogLayout);
    mainLayout->addLayout(buttonsLayout);
    setLayout(mainLayout);

    setWindowTitle(tr("Настрока порта"));
    m_serialPortComboBox->setFocus();

    connect(m_okButton, &QPushButton::clicked, this, &QDialog::accept);
    connect(this, &QDialog::accepted, this, &AddDialog::openSerialPort);
    connect(m_cancelButton, &QAbstractButton::clicked, this, &QDialog::reject);
}

AddDialog::~AddDialog(){

    delete m_serialPortLabel;
    delete  m_serialPortComboBox;
    delete  m_dataBitsLabel;
    delete  m_dataBitsComboBox;
    delete  m_stopBitsLabel;
    delete  m_stopBitsComboBox;
    delete  m_baudRateLabel;
    delete  m_baudRateComboBox;
    delete  m_parityBitLabel;
    delete  m_parityComboBox;
    delete  m_okButton;
    delete  m_cancelButton;
    delete  m_portNotify;
    delete  m_serial;
}

SerialDevice *AddDialog::openSerialPort()
{
    qDebug()<<"open serial port";
    m_serial->setStringBaudRate(m_baudRateComboBox->currentText());
    m_serial->setStringDataBits(m_dataBitsComboBox->currentText());
    m_serial->setStringParity(m_parityComboBox->currentText());
    m_serial->setPortName(m_serialPortComboBox->currentText());
    m_serial->setStringStopBits(m_stopBitsComboBox->currentText());

    if(m_serial->open(QIODevice::ReadWrite)){
        qDebug()<<"opened";
        m_portNotify->showMessage(QString(tr("Connected to ")+"%1 : %2, %3, %4, %5")
            .arg(m_serial->portName()).arg(m_serial->currentBaudRate()).arg(m_serial->currentDataBits())
            .arg(m_serial->currentParity()).arg(m_serial->currentStopBits()));
        qDebug() << "Serial port"<< m_serial->portName() << "opened";
    }
    else{
        qDebug()<<"not opened";
        m_portNotify->showMessage(QString(tr("Can't open ")+"%1"+tr(" port")).arg(m_serial->portName()));
    }
    return m_serial;
}
